<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>com.mall</groupId>
		<artifactId>mall-provider</artifactId>
		<version>0.0.1-SNAPSHOT</version>
	</parent>

	<groupId>com.mall</groupId>
	<artifactId>mall-admin</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>mall-admin</name>
	<description>Mall 用户管理</description>

	<properties>
		<java.version>1.8</java.version>
	</properties>

	<dependencies>
		<dependency>
			<groupId>com.mall</groupId>
			<artifactId>mall-common</artifactId>
			<version>0.0.1-SNAPSHOT</version>
		</dependency>
		<dependency>
			<groupId>cn.fast</groupId>
			<artifactId>spring-boot-starter-fast-web</artifactId>
			<version>0.0.1.RELEASE</version>
		</dependency>
    </dependencies>
	<build>
		<finalName>${project.artifactId}</finalName>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<configuration>
					<mainClass>com.mall.admin.MallAdminApplication</mainClass>
				</configuration>
			</plugin>
			<!--docker镜像build插件-->
			<plugin>
				<groupId>com.spotify</groupId>
				<artifactId>docker-maven-plugin</artifactId>
				<version>${docker-maven.plugin.version}</version>
				<executions>
					<execution>
						<id>push-image</id>
						<phase>deploy</phase>
						<goals>
							<goal>push</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<!-- 注意imageName一定要是符合正则[a-z0-9-_.]的，否则构建不会成功 -->
					<imageName>${docker.registry}/${project.artifactId}:${mycloud.version}</imageName>
					<dockerDirectory>${project.basedir}/src/main/docker</dockerDirectory>
					<!--构建到远程服务器上-->
					<dockerHost>${docker.url}</dockerHost>
					<!--如果你想强制docker在每次新的构建上覆盖镜像tags，可配置foreceTags-->
					<forceTags>true</forceTags>
					<resources>
						<resource>
							<targetPath>/</targetPath>
							<directory>${project.build.directory}</directory>
							<include>${project.build.finalName}.jar</include>
						</resource>
					</resources>
				</configuration>
			</plugin>
		</plugins>
	</build>
</project>
